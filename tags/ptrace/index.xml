<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ptrace on 0xCyberGenji&#39;s Github Page</title>
    <link>https://0xcybergenji.gihub.io/tags/ptrace/</link>
    <description>Recent content in Ptrace on 0xCyberGenji&#39;s Github Page</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://0xcybergenji.gihub.io/tags/ptrace/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bypass Ptrace</title>
      <link>https://0xcybergenji.gihub.io/blogs/bypass-ptrace/</link>
      <pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://0xcybergenji.gihub.io/blogs/bypass-ptrace/</guid>
      <description>Merhabalar. Bu konumda ptrace&amp;rsquo;in nasıl bypass edilebileceğiniden bahsedeceğim.&#xA;ptrace, bir process&amp;rsquo;in diğer bir process&amp;rsquo;i debug etmesini sağlayan bir sistem çağrısıdır. Bu sistem çağrısı sayesinde bir process&amp;rsquo;in diğer process&amp;rsquo;inin memory&amp;rsquo;sine erişebiliriz. Bu sayede process&amp;rsquo;in memory&amp;rsquo;sindeki verileri okuyabilir, yazabilir ve değiştirebiliriz.&#xA;ptrace, genellikle bir işlemin yürütme zamanında izlenmesi ve kontrol edilmesi amacıyla kullanılır. Bu, hata ayıklama (debugging), sistem çağrılarını izleme, işlemi duraklatma, kaynak izleme ve benzeri geliştirme ve analiz amaçları için yaygın olarak kullanılan bir sistem aracıdır.</description>
    </item>
  </channel>
</rss>
